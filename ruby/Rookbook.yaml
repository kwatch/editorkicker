preparation*: |

      def replace_keywords(files)
	edit files do |content|
	  content.gsub! /\$Release\$/,    @release
	  content.gsub! /\$Release:.*\$/, "$Release: #{@release} $"
	  content.gsub! /\$Copyright\$/,  @copyright
	  content.gsub! /\$Author\$/,     @author
	  content.gsub! /\$Email\$/,      @email
	  content.gsub! /\$License\$/,    @license
	  content
	end
      end


properties:

  - project:	EditorKicker
  - basename:	editorkicker
  - libfile:	lib/editor_kicker.rb
  - copyright:  Copyright 2008 kuwata-lab.com all rights reserved.
  - release:	0.1.0
  - author:	makoto kuwata
  - email:	kwa(at)kuwata-lab.com
  - license:	MIT License

parameters:
  - rook_product:  :all


recipes:

  - product:	:all
    ingreds:	[ :rails, :packages, :index ]

  - product:	:rails
    method*: |
	## create build directory
	#dir = "build/rails/#{@basename}"
	dir = "plugin/rails/#{@basename}"
	rm_rf dir
	mkdir_p dir
	## copy files
	cp %W[MIT-LICENSE CHANGES.txt plugin/rails/README.txt plugin/rails/init.rb], dir
	store @libfile, dir
	## edit files
	replace_keywords("#{dir}/**/*")

  - product:	:packages
    ingreds:	[ :rails ]
    method*: |
	## create build directory
	pkgname = "#{@basename}-#{@release}"
	dir = "build/#{pkgname}"
	rm_rf dir
	mkdir_p dir
	## copy files
	cp %W[MIT-LICENSE README.txt CHANGES.txt setup.rb #{@basename}.gemspec], dir
	store @libfile, dir
	## copy rails plug-in
	store "plugin/rails/#{@basename}/**/*", dir
	## edit files
	replace_keywords("#{dir}/**/*")
	## create packages
	chdir 'build' do
	  tar_czf "#{pkgname}.tar.gz", pkgname
	end
	chdir dir do
	  `ruby #{@basename}.gemspec`
	  mv "#{pkgname}.gem", '..' if test(?f, "#{pkgname}.gem")
	end

  - product:	:clean
    method*: |
	rm_rf "rails/plugin"

  - product:	:index
    ingreds:	[ website/index.html ]

  - product:	website/index.html
    method*: |
        filename = 'README.txt'
        download_url = "http://rubyforge.org/projects/$(basename)/"
        sys "rd2 #{filename} | tidy -q -i -wrap 9999 -ashtml > #{@product}"
	replace_keywords(@product)
        edit @product do |content|
          body = (content =~ /<body>.*<\/body>/m) && $&
          body.gsub! /<h1>.*<\/h1>/, "<h1>$(project): README.txt</h1>"
          body.gsub! /README-$(project)/, 'README'
          body.gsub! /<!-- RDLabel: ".*" -->/, ''
          body.gsub! /(<h\d>)<a name=".*?" id=".*?">/, '\1'
          body.gsub! /<\/a>(<\/h\d>)/, '\1'
          #body.gsub! /\$Release\$/, '$(release)'
          #body.gsub! /\$Release:.*?\$/, '$Release: $(release) $'
          #body.gsub! /\$Copyright\$/, '$(copyright)'
          #body.gsub! /\$License\$/, '$(license)'
	  body.gsub! /copyright\(c\)/, 'copyright&copy;'
          body.sub! /http:\/\/$(basename)\.rubyforge\.org\//, '<a href="\&">\&</a><br />'
          body.sub! /http:\/\/rubyforge.org\/projects\/$(basename)\//, '<a href="\&">\&</a>'
          body.sub! /$(basename)-$(release)\.tar\.gz/, "<a href=\"#{download_url}\">\\&</a>"
	  body.sub! /CGI-Exception/, '<a href="http://cgi-exception.rubyforge.org/">\&</a>'
          html = <<END
        <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
        <html lang="en">
        <head>
          <title>$(project): README.txt</title>
          <meta http-equiv="Content-Type" content="text/html; charset=utf8">
          <link rel="stylesheet" type="text/css" href="style.css">
        </head>
        #{body}
        </html>
        END
          content[0..-1] = html
          content
        end
